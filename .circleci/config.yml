version: 2.1

references:
  - &CERT_KEY certs-cache-{{ checksum "certs_cache_key" }}-v3

# This enables CircleCI's dynamic configuration feature
setup: true

filters: &all_tags
  tags:
    only: /^\d+\.\d+\.\d+([a-z0-9\-\+])*/

# The continuation orb is required to use dynamic configuration
orbs:
  continuation: circleci/continuation@0.2.0

# Define the jobs
jobs:
  setup:
    machine: true
    resource_class: name/spaces  # Specify the self-hosted runner's resource class here
    steps:
      - checkout  # Checkout code
      - maybe_build_certs
      - run:  # Generate the config file
          name: Generate config
          command: |
            tools/circle-generate-config.sh generated_config.yml
      - persist_to_workspace:  # Persist the generated config to the workspace
          root: /var/lib/circleci/workdir
          paths:
            - generated_config.yml
      - continuation/continue:  # Use the generated config for continuation
          configuration_path: /var/lib/circleci-runner/workdir/generated_config.yml

# Define commands for building certificates
commands:
  maybe_build_certs:
    steps:
      - run:
          name: Prepare cache key
          command: tools/make-certs-cache-key.sh > certs_cache_key && cat certs_cache_key
      - restore_cache:
          name: Restore certificates
          key: *CERT_KEY
      - run:
          name: Build certificates if not cached
          command: test -f tools/ssl/mongooseim/key.pem || make certs
      - run:
          name: Print cert hashes for debugging
          command: find tools/ssl -type f -exec md5sum {} \; | sort
      - run:
          name: Continue if certificate exists
          command: test -f tools/ssl/mongooseim/key.pem
      - save_cache:
          name: Cache built certs
          key: *CERT_KEY
          paths:
            - ~/project/tools/ssl/ca
            - ~/project/tools/ssl/ca-clients
            - ~/project/tools/ssl/mongooseim

# Define the workflow
workflows:
  setup_workflow:
    jobs:
      - setup
          filters: *all_tags
